name: PHA updater (4x daily)

on:
  schedule:
    # 00:00, 06:00, 12:00, 18:00 UTC
    - cron: "0 0,6,12,18 * * *"
  workflow_dispatch:
    inputs:
      lambert:
        description: "Use SBDB elements + Lambert"
        type: boolean
        default: false
        required: false
      depart_utc:
        description: "Lambert departure UTC (ISO). Empty = now"
        type: string
        required: false
      tof_days:
        description: "Lambert time of flight (days)"
        type: number
        default: 180
        required: false

permissions:
  contents: write  # needed to push updated JSON

concurrency:
  group: pha-updater
  cancel-in-progress: false

env:
  OUT_FILE: data/hazardous_neos/latest.json
  NASA_API_KEY: ${{ secrets.NASA_API_KEY }}
  # Set to 'true' to force Lambert on scheduled runs (otherwise only when dispatch input is true)
  LAMBERT: "false"
  TOF_DAYS_DEFAULT: "180"

jobs:
  update:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"
          cache: "pip"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install -r requirements.txt

      - name: Update hazardous NEO snapshot (NeoWs)
        env:
          NASA_API_KEY: ${{ env.NASA_API_KEY }}
          OUT_FILE: ${{ env.OUT_FILE }}
        run: |
          python -m scripts.update_hazardous_neos

      # ---- Hohmann baseline (default) ----
      - name: Plan intercepts (Hohmann baseline)
        if: ${{ !( (github.event_name == 'workflow_dispatch' && inputs.lambert == true) || env.LAMBERT == 'true' ) }}
        run: |
          python -m scripts.neo_intercept_planner \
            --input  "${{ env.OUT_FILE }}" \
            --output data/hazardous_neos/latest_intercept.json \
            --roll-past

      # ---- Elements + Lambert (opt-in) ----
      - name: Plan intercepts (SBDB elements + Lambert)
        if: ${{ (github.event_name == 'workflow_dispatch' && inputs.lambert == true) || env.LAMBERT == 'true' }}
        env:
          INPUT_TOF: ${{ inputs.tof_days }}
          INPUT_DEP: ${{ inputs.depart_utc }}
          TOF_DEFAULT: ${{ env.TOF_DAYS_DEFAULT }}
        run: |
          # choose departure time: provided or "now" in UTC
          DUTC="${INPUT_DEP:-$(date -u +%Y-%m-%dT%H:%M:%SZ)}"
          # choose TOF: provided or default
          TDays="${INPUT_TOF:-$TOF_DEFAULT}"

          python -m scripts.neo_intercept_planner \
            --input  "${{ env.OUT_FILE }}" \
            --output data/hazardous_neos/latest_intercept.json \
            --roll-past \
            --elements \
            --lambert \
            --depart-utc "${DUTC}" \
            --tof-days "${TDays}"

      - name: Commit & push if changed
        env:
          GIT_AUTHOR_NAME: Matthew Cranny
          GIT_AUTHOR_EMAIL: 163694578+mcranny@users.noreply.github.com
          GIT_COMMITTER_NAME: Matthew Cranny
          GIT_COMMITTER_EMAIL: 163694578+mcranny@users.noreply.github.com
        run: |
          set -e
          git config user.name  "$GIT_AUTHOR_NAME"
          git config user.email "$GIT_AUTHOR_EMAIL"

          git add -A
          if git diff --staged --quiet; then
            echo "No changes to commit."
            exit 0
          fi

          msg="NEO: auto-update $(date -u +'%Y-%m-%d %H:%M UTC')"
          git commit -m "$msg"
          git push origin HEAD:main
